{"version":3,"sources":["logo.svg","Todos.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Todos","useState","todos","setTodos","useEffect","a","axios","get","data","rendered","map","id","title","style","listStyleType","Button","styled","button","App","props","className","src","logo","alt","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,MAA0B,iC,iEC+B1BA,EArBD,WAAO,IAAD,EACQC,mBAAiB,IADzB,mBACXC,EADW,KACJC,EADI,KAGlBC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,sEACwBC,IAAMC,IAC3B,8CAFH,gBACSC,EADT,EACSA,KAGRL,EAASK,GAJV,0CAAD,KAMC,IAEH,IAAMC,EAAWP,EAAMQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACzB,oBAAIC,MAAO,CAAEC,cAAe,QAA5B,SACGF,GADwCD,MAK7C,OAAO,6BAAKF,K,4OCtBd,IAAMM,EAASC,IAAOC,OAAV,KAuBGC,MAbf,SAAaC,GACX,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,cAACR,EAAD,0BACCI,EAAMK,SACP,cAAC,EAAD,UCTOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,kDAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e27e5c01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\ninterface Todo {\n  id: number;\n  userId: number;\n  title: string;\n  completed: boolean;\n}\n\nconst Todos = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      const { data } = await axios.get(\n        \"https://jsonplaceholder.typicode.com/todos\"\n      );\n      setTodos(data);\n    })();\n  }, []);\n\n  const rendered = todos.map(({ id, title }) => (\n    <li style={{ listStyleType: \"none\" }} key={id}>\n      {title}\n    </li>\n  ));\n\n  return <ul>{rendered}</ul>;\n};\n\nexport default Todos;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport Todos from \"./Todos\";\n\nconst Button = styled.button`\n  background: palevioletred;\n  color: white;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\nfunction App(props: React.PropsWithChildren<{}>) {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Button>Hello World</Button>\n        {props.children}\n        <Todos />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App>\n      <div>Children...</div>\n    </App>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}